import{_ as s,c as n,o as a,a as l}from"./app.2b104437.js";const m=JSON.parse('{"title":"FAQ - 常见问题答疑","description":"","frontmatter":{},"headers":[{"level":3,"title":"如何理解控制反转（Ioc）？","slug":"如何理解控制反转-ioc","link":"#如何理解控制反转-ioc","children":[]}],"relativePath":"other/faq.md","lastUpdated":1677571724000}'),p={name:"other/faq.md"},e=l(`<h1 id="faq-常见问题答疑" tabindex="-1">FAQ - 常见问题答疑 <a class="header-anchor" href="#faq-常见问题答疑" aria-hidden="true">#</a></h1><nav class="table-of-contents"><ul><li><a href="#如何理解控制反转-ioc">如何理解控制反转（Ioc）？</a></li></ul></nav><h3 id="如何理解控制反转-ioc" tabindex="-1">如何理解控制反转（Ioc）？ <a class="header-anchor" href="#如何理解控制反转-ioc" aria-hidden="true">#</a></h3><p>控制反转（Inversion of Control，IoC）是一种程序设计模式，它将对象的创建和使用过程交由容器来处理，有助于减少代码耦合度、改进代码可重用性、降低代码复杂性。 IoC 通常会使用<strong>依赖注入</strong>的方式来实现，即将所需要的对象或者服务注入到相应的对象中。</p><p>PHP 示例：</p><div class="language-php line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki"><code><span class="line"><span style="color:#FF79C6;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">Container</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">private</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">array</span><span style="color:#F8F8F2;"> $services </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">register</span><span style="color:#F8F8F2;">($name, $callback)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (</span><span style="color:#8BE9FD;">is_callable</span><span style="color:#F8F8F2;">($callback)) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#BD93F9;">$this</span><span style="color:#FF79C6;">-&gt;</span><span style="color:#F8F8F2;">services[$name] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> $callback;</span></span>
<span class="line"><span style="color:#F8F8F2;">        } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FF79C6;">throw</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">\\</span><span style="color:#8BE9FD;">RuntimeException</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">Invalid callback</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">($name)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (</span><span style="color:#8BE9FD;">isset</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">$this</span><span style="color:#FF79C6;">-&gt;</span><span style="color:#F8F8F2;">services[$name])) {  </span><span style="color:#6272A4;">// 如果服务存在，则调用回调函数来实例化服务对象并返回结果。</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">call_user_func</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">$this</span><span style="color:#FF79C6;">-&gt;</span><span style="color:#F8F8F2;">services[$name]);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">throw</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">\\</span><span style="color:#8BE9FD;">RuntimeException</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">Service not found</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>依赖：</p><div class="language-php line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki"><code><span class="line"><span style="color:#FF79C6;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">User</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">private</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">DatabaseInterfece</span><span style="color:#F8F8F2;"> $db;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">__construct</span><span style="color:#F8F8F2;">(</span><span style="color:#8BE9FD;">DatabaseInterfece</span><span style="color:#F8F8F2;"> $db)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#BD93F9;">$this</span><span style="color:#FF79C6;">-&gt;</span><span style="color:#F8F8F2;">db </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> $db;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">public</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">getUserInfo</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">$this</span><span style="color:#FF79C6;">-&gt;</span><span style="color:#F8F8F2;">db</span><span style="color:#FF79C6;">-&gt;</span><span style="color:#50FA7B;">getUserInfo</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>使用：</p><div class="language-php line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki"><code><span class="line"><span style="color:#6272A4;">// 定义IoC容器</span></span>
<span class="line"><span style="color:#F8F8F2;">$container </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">Container</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 注册服务</span></span>
<span class="line"><span style="color:#F8F8F2;">$container</span><span style="color:#FF79C6;">-&gt;</span><span style="color:#50FA7B;">register</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">db</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> () {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">MySQL</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 使用服务</span></span>
<span class="line"><span style="color:#F8F8F2;">$user </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">User</span><span style="color:#F8F8F2;">($container</span><span style="color:#FF79C6;">-&gt;</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">db</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#F8F8F2;">$info </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> $user</span><span style="color:#FF79C6;">-&gt;</span><span style="color:#50FA7B;">getUserInfo</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD93F9;">$this</span><span style="color:#FF79C6;">-&gt;</span><span style="color:#50FA7B;">assertIsArray</span><span style="color:#F8F8F2;">($info);</span></span>
<span class="line"><span style="color:#BD93F9;">$this</span><span style="color:#FF79C6;">-&gt;</span><span style="color:#50FA7B;">assertArrayHasKey</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">name</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, $info);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>具体可查看：<a href="https://github.com/SimpleLearnCoding/hyperf-skeleton/pull/2" target="_blank" rel="noreferrer">#2</a>。</p>`,11),o=[e];function F(r,c,t,i,y,b){return a(),n("div",null,o)}const C=s(p,[["render",F]]);export{m as __pageData,C as default};
